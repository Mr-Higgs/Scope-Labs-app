{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13053\\\\Desktop\\\\ScopeLabs\\\\app\\\\src\\\\components\\\\VideoList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { VideoContext } from '../contexts/VideoContext';\nimport { useHistory } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport './VideoList.scss';\n\n// VideoList component displays a list of videos fetched from the API.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoList = () => {\n  _s();\n  // Use the VideoContext to access the videos state and the setVideos function.\n  const {\n    videos,\n    setVideos\n  } = useContext(VideoContext);\n\n  // State variable to hold any error that occurs during fetching.\n  const [error, setError] = useState(null);\n\n  // Use the useHistory hook to access the browser history.\n  const history = useHistory();\n\n  // useEffect hook to fetch videos from the API when the component mounts.\n  useEffect(() => {\n    // Async function to fetch videos from the API.\n    const fetchVideos = async () => {\n      try {\n        // Send a GET request to the videos API endpoint, passing the user_id parameter.\n        const response = await axios.get('https://take-home-assessment-423502.uc.r.appspot.com/api/videos', {\n          params: {\n            user_id: 'john_smith'\n          }\n        });\n\n        // Access the videos array within the response object.\n        const videoArray = response.data.videos;\n\n        // Check if the extracted videos array is an array.\n        if (Array.isArray(videoArray)) {\n          // Update the videos state with the extracted videos array.\n          setVideos(videoArray);\n        } else {\n          // If the videos data is not an array, set the error state.\n          setError('Videos data is not an array');\n        }\n      } catch (error) {\n        // If there's an error fetching videos, set the error state.\n        setError(`Failed to fetch videos: ${error.message}`);\n      }\n    };\n    // Call the fetchVideos function when the component mounts.\n    fetchVideos();\n  }, [setVideos]);\n\n  // If there's an error, display it.\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to handle video click and navigate to the video detail page.\n  const handleVideoClick = videoId => {\n    history.push(`/video/${videoId}`);\n  };\n\n  // Render the video list.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-list\",\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list__card\",\n      onClick: () => handleVideoClick(video.id),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"video-list__card-title\",\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        className: \"video-list__card-thumbnail\",\n        url: video.video_url,\n        controls: true,\n        width: \"auto\",\n        height: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-list__card-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"By: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.user_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-list__card-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Number of comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.num_comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, video.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoList, \"iV5MG/aagPR0u7gTsuxgxW13fzc=\", false, function () {\n  return [useHistory];\n});\n_c = VideoList;\nexport default VideoList;\nvar _c;\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","VideoContext","useHistory","ReactPlayer","jsxDEV","_jsxDEV","VideoList","_s","videos","setVideos","error","setError","history","fetchVideos","response","get","params","user_id","videoArray","data","Array","isArray","message","children","fileName","_jsxFileName","lineNumber","columnNumber","handleVideoClick","videoId","push","className","map","video","onClick","id","title","url","video_url","controls","width","height","num_comments","_c","$RefreshReg$"],"sources":["C:/Users/13053/Desktop/ScopeLabs/app/src/components/VideoList.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { VideoContext } from '../contexts/VideoContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReactPlayer from 'react-player';\r\nimport './VideoList.scss'\r\n\r\n// VideoList component displays a list of videos fetched from the API.\r\nconst VideoList = () => {\r\n  // Use the VideoContext to access the videos state and the setVideos function.\r\n  const { videos, setVideos } = useContext(VideoContext);\r\n  \r\n  // State variable to hold any error that occurs during fetching.\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Use the useHistory hook to access the browser history.\r\n  const history = useHistory();\r\n\r\n  // useEffect hook to fetch videos from the API when the component mounts.\r\n  useEffect(() => {\r\n    // Async function to fetch videos from the API.\r\n    const fetchVideos = async () => {\r\n      try {\r\n        // Send a GET request to the videos API endpoint, passing the user_id parameter.\r\n        const response = await axios.get('https://take-home-assessment-423502.uc.r.appspot.com/api/videos', { params: { user_id: 'john_smith' } });\r\n        \r\n        // Access the videos array within the response object.\r\n        const videoArray = response.data.videos;\r\n        \r\n        // Check if the extracted videos array is an array.\r\n        if (Array.isArray(videoArray)) {\r\n          // Update the videos state with the extracted videos array.\r\n          setVideos(videoArray);\r\n        } else {\r\n          // If the videos data is not an array, set the error state.\r\n          setError('Videos data is not an array');\r\n        }\r\n      } catch (error) {\r\n        // If there's an error fetching videos, set the error state.\r\n        setError(`Failed to fetch videos: ${error.message}`);\r\n      }\r\n    };\r\n    // Call the fetchVideos function when the component mounts.\r\n    fetchVideos();\r\n  }, [setVideos]);\r\n\r\n  // If there's an error, display it.\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  // Function to handle video click and navigate to the video detail page.\r\n  const handleVideoClick = (videoId) => {\r\n    history.push(`/video/${videoId}`);\r\n  };\r\n\r\n  // Render the video list.\r\n  return (\r\n    <div className=\"video-list\">\r\n      {videos.map(video => (\r\n        <div key={video.id} \r\n             className=\"video-list__card\" \r\n             onClick={() => handleVideoClick(video.id)}>\r\n          <h3 className=\"video-list__card-title\">{video.title}</h3>\r\n          <ReactPlayer \r\n            className='video-list__card-thumbnail'\r\n            url={video.video_url} \r\n            controls \r\n            width=\"auto\" \r\n            height=\"auto\"\r\n          />\r\n          <div className='video-list__card-details'>\r\n            <p>By: </p>\r\n            <p>{video.user_id}</p>\r\n          </div>\r\n          <div className='video-list__card-details'>\r\n            <p>Number of comments:</p>\r\n            <p>{video.num_comments}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}