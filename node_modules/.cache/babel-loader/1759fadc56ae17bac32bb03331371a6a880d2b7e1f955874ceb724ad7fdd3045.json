{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13053\\\\Desktop\\\\ScopeLabs\\\\app\\\\src\\\\contexts\\\\VideoContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoContext = /*#__PURE__*/createContext();\n\n/**\r\n * VideoProvider is a React component that provides a context for the\r\n * entire application. It uses the useState hook to manage the state of\r\n * two variables: videos and comments.\r\n *\r\n * The videos state is an array that will hold the list of videos fetched\r\n * from the API. The comments state is an array that will hold the list of\r\n * comments for each video.\r\n *\r\n * The useState hook returns an array with two elements: the current state\r\n * value and a function to update the state value. The useState hook is\r\n * called twice to initialize the videos and comments state variables.\r\n *\r\n * The VideoProvider component returns a context provider component that\r\n * wraps its children components. The value prop of the context provider\r\n * component is an object that contains the videos and comments state\r\n * variables and their respective setter functions. The children components\r\n * can access these state variables and setter functions through the\r\n * VideoContext object.\r\n *\r\n * @param {Object} props - The props object that contains the children\r\n * components.\r\n * @return {JSX.Element} - The context provider component that wraps the\r\n * children components.\r\n */\nexport const VideoProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize the videos state with an empty array.\n  const [videos, setVideos] = useState([]);\n  // Initialize the comments state with an empty array.\n  const [comments, setComments] = useState([]);\n\n  // Return the context provider component that wraps the children components.\n  return (\n    /*#__PURE__*/\n    // The value prop of the context provider component is an object that\n    // contains the videos and comments state variables and their respective\n    // setter functions.\n    _jsxDEV(VideoContext.Provider, {\n      value: {\n        // The videos state variable.\n        videos,\n        // The setter function for the videos state variable.\n        setVideos,\n        // The comments state variable.\n        comments,\n        // The setter function for the comments state variable.\n        setComments\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(VideoProvider, \"+b4k6khGXkEKo+cVcqknP20visw=\");\n_c = VideoProvider;\nexport default VideoProvider;\nvar _c;\n$RefreshReg$(_c, \"VideoProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","VideoContext","VideoProvider","children","_s","videos","setVideos","comments","setComments","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/13053/Desktop/ScopeLabs/app/src/contexts/VideoContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const VideoContext = createContext();\r\n\r\n/**\r\n * VideoProvider is a React component that provides a context for the\r\n * entire application. It uses the useState hook to manage the state of\r\n * two variables: videos and comments.\r\n *\r\n * The videos state is an array that will hold the list of videos fetched\r\n * from the API. The comments state is an array that will hold the list of\r\n * comments for each video.\r\n *\r\n * The useState hook returns an array with two elements: the current state\r\n * value and a function to update the state value. The useState hook is\r\n * called twice to initialize the videos and comments state variables.\r\n *\r\n * The VideoProvider component returns a context provider component that\r\n * wraps its children components. The value prop of the context provider\r\n * component is an object that contains the videos and comments state\r\n * variables and their respective setter functions. The children components\r\n * can access these state variables and setter functions through the\r\n * VideoContext object.\r\n *\r\n * @param {Object} props - The props object that contains the children\r\n * components.\r\n * @return {JSX.Element} - The context provider component that wraps the\r\n * children components.\r\n */\r\nexport const VideoProvider = ({ children }) => {\r\n  // Initialize the videos state with an empty array.\r\n  const [videos, setVideos] = useState([]);\r\n  // Initialize the comments state with an empty array.\r\n  const [comments, setComments] = useState([]);\r\n\r\n  // Return the context provider component that wraps the children components.\r\n  return (\r\n    // The value prop of the context provider component is an object that\r\n    // contains the videos and comments state variables and their respective\r\n    // setter functions.\r\n    <VideoContext.Provider\r\n      value={{\r\n        // The videos state variable.\r\n        videos,\r\n        // The setter function for the videos state variable.\r\n        setVideos,\r\n        // The comments state variable.\r\n        comments,\r\n        // The setter function for the comments state variable.\r\n        setComments\r\n      }}\r\n    >\r\n      {/* The children components that can access the videos and comments\r\n      state variables and setter functions through the VideoContext object. */}\r\n      {children}\r\n    </VideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default VideoProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;IAAA;IACE;IACA;IACA;IACAE,OAAA,CAACC,YAAY,CAACQ,QAAQ;MACpBC,KAAK,EAAE;QACL;QACAL,MAAM;QACN;QACAC,SAAS;QACT;QACAC,QAAQ;QACR;QACAC;MACF,CAAE;MAAAL,QAAA,EAIDA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;AAE5B,CAAC;AAACV,EAAA,CA5BWF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AA8B1B,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}