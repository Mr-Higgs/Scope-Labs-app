{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13053\\\\Desktop\\\\ScopeLabs\\\\app\\\\src\\\\components\\\\CreateVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// CreateVideo component is a form that allows users to create a new video.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateVideo = () => {\n  _s();\n  // UseState hooks to manage state for userId, title, description, videoUrl, error, and success messages.\n  const [userId, setUserId] = useState(''); // The user ID of the creator of the video.\n  const [title, setTitle] = useState(''); // The title of the video.\n  const [description, setDescription] = useState(''); // The description of the video.\n  const [videoUrl, setVideoUrl] = useState(''); // The URL of the video.\n  const [error, setError] = useState(null); // Any error that occurs during video creation.\n  const [success, setSuccess] = useState(null); // Success message to display after video creation.\n\n  // Function to handle form submission.\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior.\n    try {\n      // Send a POST request to the API to create a new video.\n      const response = await axios.post('https://take-home-assessment-423502.uc.r.appspot.com/api/videos', {\n        user_id: userId,\n        // The user ID of the creator of the video.\n        title,\n        // The title of the video.\n        description,\n        // The description of the video.\n        video_url: videoUrl // The URL of the video.\n      });\n      console.log('Video created:', response.data); // Debug log.\n      setSuccess('Video created successfully'); // Update the success state.\n      setUserId(''); // Reset the user ID state.\n      setTitle(''); // Reset the title state.\n      setDescription(''); // Reset the description state.\n      setVideoUrl(''); // Reset the video URL state.\n    } catch (error) {\n      console.error('Error creating video:', error); // Log the error.\n      setError(`Failed to create video: ${error.message}`); // Update the error state.\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Render a form that allows users to create a new video.\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"createVideo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createVideo-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"createVideo-input\",\n          type: \"text\",\n          value: userId,\n          placeholder: \"USER\",\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createVideo-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"createVideo-input\",\n          type: \"text\",\n          value: title,\n          placeholder: \"TITLE\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createVideo-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"createVideo-input\",\n          type: \"text\",\n          value: description,\n          placeholder: \"DESCRIPTION\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createVideo-input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"createVideo-input\",\n          type: \"text\",\n          value: videoUrl,\n          placeholder: \"URL\",\n          onChange: e => setVideoUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createVideo-input\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"createVideo-input-button-gold\",\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(CreateVideo, \"Ou9tvAyuYG+q2/obub/59jYsKK0=\");\n_c = CreateVideo;\nexport default CreateVideo;\nvar _c;\n$RefreshReg$(_c, \"CreateVideo\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateVideo","_s","userId","setUserId","title","setTitle","description","setDescription","videoUrl","setVideoUrl","error","setError","success","setSuccess","handleSubmit","e","preventDefault","response","post","user_id","video_url","console","log","data","message","onSubmit","className","children","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/13053/Desktop/ScopeLabs/app/src/components/CreateVideo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// CreateVideo component is a form that allows users to create a new video.\r\nconst CreateVideo = () => {\r\n    // UseState hooks to manage state for userId, title, description, videoUrl, error, and success messages.\r\n    const [userId, setUserId] = useState(''); // The user ID of the creator of the video.\r\n    const [title, setTitle] = useState(''); // The title of the video.\r\n    const [description, setDescription] = useState(''); // The description of the video.\r\n    const [videoUrl, setVideoUrl] = useState(''); // The URL of the video.\r\n    const [error, setError] = useState(null); // Any error that occurs during video creation.\r\n    const [success, setSuccess] = useState(null); // Success message to display after video creation.\r\n\r\n    // Function to handle form submission.\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevent the default form submission behavior.\r\n        try {\r\n            // Send a POST request to the API to create a new video.\r\n            const response = await axios.post('https://take-home-assessment-423502.uc.r.appspot.com/api/videos', { \r\n                user_id: userId, // The user ID of the creator of the video.\r\n                title, // The title of the video.\r\n                description, // The description of the video.\r\n                video_url: videoUrl // The URL of the video.\r\n            });\r\n            console.log('Video created:', response.data); // Debug log.\r\n            setSuccess('Video created successfully'); // Update the success state.\r\n            setUserId(''); // Reset the user ID state.\r\n            setTitle(''); // Reset the title state.\r\n            setDescription(''); // Reset the description state.\r\n            setVideoUrl(''); // Reset the video URL state.\r\n        } catch (error) {\r\n            console.error('Error creating video:', error); // Log the error.\r\n            setError(`Failed to create video: ${error.message}`); // Update the error state.\r\n        }\r\n    };\r\n\r\n    return (\r\n        // Render a form that allows users to create a new video.\r\n        <form onSubmit={handleSubmit} className=\"createVideo\">\r\n            <div className=\"createVideo-input\" >\r\n                <input className=\"createVideo-input\" type=\"text\" value={userId} placeholder=\"USER\" onChange={(e) => setUserId(e.target.value)} />\r\n            </div>\r\n            <div className=\"createVideo-input\">\r\n                <input className=\"createVideo-input\" type=\"text\" value={title} placeholder=\"TITLE\" onChange={(e) => setTitle(e.target.value)} />\r\n            </div>\r\n            <div className=\"createVideo-input\">\r\n                <input className=\"createVideo-input\" type=\"text\" value={description} placeholder=\"DESCRIPTION\" onChange={(e) => setDescription(e.target.value)} />\r\n            </div>\r\n            <div className=\"createVideo-input\">\r\n                <input className=\"createVideo-input\" type=\"text\" value={videoUrl} placeholder=\"URL\" onChange={(e) => setVideoUrl(e.target.value)} />\r\n            </div>\r\n            <div className=\"createVideo-input\">\r\n                <button className=\"createVideo-input-button-gold\" type=\"submit\">Upload</button>\r\n            </div>\r\n            \r\n            {error && <div className=\"error\">{error}</div>}\r\n            {success && <div>{success}</div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateVideo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}